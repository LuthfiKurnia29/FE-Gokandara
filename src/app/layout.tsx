import { type ReactNode } from 'react';

import type { Metadata } from 'next';
import localFont from 'next/font/local';

import { ThemeProvider } from 'next-themes';

import '@/app/globals.css';
import { AppSidebar } from '@/components/app-sidebar';
import { DashboardLayout } from '@/components/layouts/dashboard-layout';
import { LoginScreen } from '@/components/login-screen';
import { AuthProvider } from '@/components/providers/auth-provider';
import { SidebarProvider } from '@/components/ui/sidebar';

const geistSans = localFont({
    src: './fonts/GeistVF.woff',
    variable: '--font-geist-sans',
    weight: '100 900'
});
const geistMono = localFont({
    src: './fonts/GeistMonoVF.woff',
    variable: '--font-geist-mono',
    weight: '100 900'
});

export const metadata: Metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app'
};

const Layout = ({ children }: Readonly<{ children: ReactNode }>) => {
    return (
        // ? https://github.com/pacocoursey/next-themes?tab=readme-ov-file#with-app
        // ? https://react.dev/reference/react-dom/client/hydrateRoot#suppressing-unavoidable-hydration-mismatch-errors
        <html suppressHydrationWarning lang='en'>
            <body className={`${geistSans.variable} ${geistMono.variable} text-foreground bg-white antialiased`}>
                <ThemeProvider attribute='class'>
                    <div className='relative mx-auto w-full max-w-lg overflow-hidden shadow-2xl'>
                        <AuthProvider>
                            <DashboardLayout>{children}</DashboardLayout>
                        </AuthProvider>
                    </div>
                </ThemeProvider>
            </body>
        </html>
    );
};

export default Layout;
